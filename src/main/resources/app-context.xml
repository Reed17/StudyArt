<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security-3.1.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


    <context:annotation-config/>

    <context:component-scan base-package="ua.artcode"/>

    <!--context:property-placeholder location="app.properties"/-->

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="false"/>
        <property name="locations">
            <list>
                <value>classpath:app.properties</value>
            </list>
        </property>
    </bean>

    <!--&lt;!&ndash;Spring security beans&ndash;&gt;-->

    <!--<http auto-config="true" use-expressions="true">-->
        <!--<form-login login-processing-url="/static/j_spring_security_check"-->
                    <!--login-page="/index.jsp"-->
                    <!--authentication-failure-url="/login?login_error=t"/>-->
    <!--</http>-->

    <!--<authentication-manager>-->
        <!--<authentication-provider>-->
            <!--<user-service>-->
                <!--<user name="mkyong" password="123456" authorities="ROLE_USER"/>-->
            <!--</user-service>-->
        <!--</authentication-provider>-->
    <!--</authentication-manager>-->

    <!--Spring mvc beans-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <bean id="сodingBatTaskMongoTestImpl" class="ua.artcode.dao.CodingBatTaskDaoMongoImpl">
        <constructor-arg name="datastore" ref="testStore"/>
    </bean>

    <bean id="сodingBatTaskMongoImpl" class="ua.artcode.dao.CodingBatTaskDaoMongoImpl">
        <constructor-arg name="datastore" ref="datastore"/>
    </bean>

    <bean id="userDaoMongoTestImpl" class="ua.artcode.dao.UserDaoMongoImpl">
        <constructor-arg name="datastore" ref="testStore"/>
    </bean>

    <bean id="userDaoMongoMongoImpl" class="ua.artcode.dao.UserDaoMongoImpl">
        <constructor-arg name="datastore" ref="datastore"/>
    </bean>

    <bean id="courseDaoTestImpl" class="ua.artcode.dao.CourseDaoImpl">
        <constructor-arg name="datastore" ref="testStore"/>
    </bean>

    <bean id="courseDaoImpl" class="ua.artcode.dao.CourseDaoImpl">
        <constructor-arg name="datastore" ref="datastore"/>
    </bean>

    <bean id="mongoClient" class="com.mongodb.MongoClient">
        <constructor-arg name="host" value="${mongo.host}"/>
        <constructor-arg name="port" value="${mongo.port}"/>
    </bean>

    <bean id="dbname" class="java.lang.String">
        <constructor-arg value="${mongo.db}"/>
    </bean>

    <bean id="morphia" class="org.mongodb.morphia.Morphia"/>

    <bean id="datastore" class="org.mongodb.morphia.Datastore" factory-bean="morphia" factory-method="createDatastore">
        <!-- constructor args pass args to factoryMethod-->
        <constructor-arg name="mongoClient" ref="mongoClient"/>
        <constructor-arg name="dbName" value="${mongo.db}"/>
    </bean>

    <bean id="testStore" class="org.mongodb.morphia.Datastore" factory-bean="morphia" factory-method="createDatastore">
        <!-- constructor args pass args to factoryMethod-->
        <constructor-arg name="mongoClient" ref="mongoClient"/>
        <constructor-arg name="dbName" value="${mongo.test.db}"/>
    </bean>

    <bean id="dynamicCompiler" class="ua.artcode.utils.dynamic_compile.DynamicCompiler"/>

    <bean id="dataUnmarshaller" class="ua.artcode.utils.codingbat.DataUnmarshaller"/>

    <bean id="templateProcessor" class="ua.artcode.preprocess.TemplateProcessor">
        <property name="velocityEngine" ref="velocityEngine"/>
        <property name="vc" ref="velocityContext"/>
    </bean>

    <bean id="velocityEngine"
          class="org.springframework.ui.velocity.VelocityEngineFactoryBean" init-method="newVelocityEngine">
        <property name="velocityProperties">
            <props>
                <prop key="resource.loader">class</prop>
                <prop key="class.resource.loader.class">
                    org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
                </prop>
            </props>
        </property>
    </bean>

    <bean id="velocityContext" class="org.apache.velocity.VelocityContext"/>

    <bean id="taskRunner" class="ua.artcode.process.TaskRunFacade">
        <constructor-arg name="templatePath" value="${velocity.template}"/>
        <constructor-arg name="srcRoot">
            <bean class="java.io.File">
                <constructor-arg type="java.lang.String" value="${root.dynamic}"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="dateConverter" ref="dataUnmarshaller"/>
        <constructor-arg name="dynamicCompiler" ref="dynamicCompiler"/>
        <constructor-arg name="templateProcessor" ref="templateProcessor"/>
    </bean>

</beans>
